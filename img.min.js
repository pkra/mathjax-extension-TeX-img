const Configuration=MathJax._.input.tex.Configuration,SymbolMap=MathJax._.input.tex.SymbolMap.js,TexError=MathJax._.input.tex.Configuration.TexError,CheckDimen=function(e){if(""===e)return"";if(e.match(/^\s*([-+]?(\.\d+|\d+(\.\d*)?))\s*(pt|em|ex|mu|px|mm|cm|in|pc)\s*$/))return e.replace(/ /g,"");throw new TexError("BadImageDimen","Bad dimension for image: %1",e)};new SymbolMap.CommandMap("img",{img:"Img"},{Img(e,t){const i=e.GetBrackets(t,""),n={valign:"",width:"",height:""};if(i.match(/[,=]/))for(const e of i.split(/\s*,\s*/)){const[i,...r]=e.split(/\s*=\s*/);if(!n.hasOwnProperty(i))throw new TexError("UnknownKey",'Unknown parameter "%1" in %2',i,t);n[i]=CheckDimen(r.join("="))}else n.valign=CheckDimen(i),n.width=CheckDimen(e.GetBrackets(t,"")),n.height=CheckDimen(e.GetBrackets(t,""));n.src=e.GetArgument(t),n.valign||delete n.valign,n.width||delete n.width,n.height||delete n.height,e.Push(e.create("token","mglyph",n))}}),Configuration.Configuration.create("img",{handler:{macro:["img"]}});
